GIT := git
CC := gcc
AR := ar
EMCC := emcc
EMAR := emar

RAYLIB_SOURCES := \
	vendor/raylib/src/raudio.c \
	vendor/raylib/src/rcore.c \
	vendor/raylib/src/rmodels.c \
	vendor/raylib/src/rshapes.c \
	vendor/raylib/src/rtext.c \
	vendor/raylib/src/rtextures.c \
	vendor/raylib/src/utils.c

CJSON_SOURCES := \
	vendor/cJSON/cJSON.c

RAYLIB_WEB_OBJECTS := $(patsubst vendor/raylib/src/%.c,lib/web/raylib/%.o, $(RAYLIB_SOURCES))

CJSON_DESKTOP_OBJECTS := $(patsubst vendor/cJSON/%.c,lib/desktop/cJSON/%.o, $(CJSON_SOURCES))
CJSON_WEB_OBJECTS := $(patsubst vendor/cJSON/%.c,lib/web/cJSON/%.o, $(CJSON_SOURCES))

$(VERBOSE).SILENT:

.PHONY: all
all: clean vendor

lib:
	mkdir $@

lib/desktop: | lib
	mkdir $@

lib/desktop/raylib: | lib/desktop
	mkdir $@

lib/desktop/cJSON: | lib/desktop
	mkdir $@

lib/web: | lib
	mkdir $@

lib/web/raylib: | lib/web
	mkdir $@

lib/web/cJSON: | lib/web
	mkdir $@

# raylib

vendor/raylib/src/Makefile:
	$(GIT) submodule update --init --recursive vendor/raylib

lib/desktop/libraylib.a: vendor/raylib/src/Makefile | lib/desktop/raylib
	cd vendor/raylib/src; $(MAKE) PLATFORM=PLATFORM_DESKTOP CUSTOM_CFLAGS=-DSUPPORT_CUSTOM_FRAME_CONTROL

	mv vendor/raylib/src/raudio.o lib/desktop/raylib
	mv vendor/raylib/src/rcore.o lib/desktop/raylib
	mv vendor/raylib/src/rglfw.o lib/desktop/raylib
	mv vendor/raylib/src/rmodels.o lib/desktop/raylib
	mv vendor/raylib/src/rshapes.o lib/desktop/raylib
	mv vendor/raylib/src/rtext.o lib/desktop/raylib
	mv vendor/raylib/src/rtextures.o lib/desktop/raylib
	mv vendor/raylib/src/utils.o lib/desktop/raylib

	mv vendor/raylib/src/libraylib.a lib/desktop

$(RAYLIB_WEB_OBJECTS): lib/web/raylib/%.o: vendor/raylib/src/%.c | lib/web/raylib
	$(EMCC) -O1 -DPLATFORM_WEB -DGRAPHICS_API_OPENGL_ES2 -DSUPPORT_CUSTOM_FRAME_CONTROL -o $@ -c $<

lib/web/libraylib.a: $(RAYLIB_WEB_OBJECTS) | lib/web
	$(EMAR) rcs $@ $^

# cJSON

vendor/cJSON/cJSON.c:
	$(GIT) submodule update --init --recursive vendor/cJSON

$(CJSON_DESKTOP_OBJECTS): $(CJSON_SOURCES) | lib/desktop/cJSON
	$(CC) -std=c89 -O1 -o $@ -c $^

lib/desktop/libcJSON.a: $(CJSON_DESKTOP_OBJECTS) | lib/desktop
	$(AR) rcs $@ $^

$(CJSON_WEB_OBJECTS): $(CJSON_SOURCES) | lib/web/cJSON
	$(EMCC) -std=c89 -O1 -o $@ -c $^

lib/web/libcJSON.a: $(CJSON_WEB_OBJECTS) | lib/web
	$(EMAR) rcs $@ $^

.PHONY: raylib
raylib: lib/desktop/libraylib.a lib/web/libraylib.a

.PHONY: cJSON
cJSON: lib/desktop/libcJSON.a lib/web/libcJSON.a

.PHONY: vendor
vendor: raylib cJSON

.PHONY: clean
clean:
	if [ -d "lib" ]; then rm -r lib; fi
