TOTAL_MEMORY := 33554432

EMCC := emcc
EMAR := emar
FLAGS := -std=c17 -Wall -Wextra -Wpedantic -DPLATFORM_WEB
RELEASE_FLAGS := -O3

INCLUDE_FLAGS := -Ivendor/raylib/src
LIBRARY_FLAGS := -Lvendor/raylib/src

RAYLIB_FILES := \
	rcore.c \
	rshapes.c \
	rtextures.c \
	rtext.c \
	rmodels.c \
	raudio.c \
	utils.c

RAYLIB_SOURCES := $(patsubst %,vendor/raylib/src/%, $(RAYLIB_FILES))
RAYLIB_OBJECTS := $(patsubst vendor/raylib/src/%.c,build/vendor/raylib/web/%.o, $(RAYLIB_SOURCES))

LIB_RAYLIB := build/vendor/raylib/web/libraylib.a

GAME_HEADERS := $(shell find src -type f -name "*.h")
GAME_SOURCES := $(shell find src -type f -name "*.c")
CONTENT_SOURCES := $(shell find src/resources)

RELEASE_OBJECTS := $(patsubst src/%.c,build/release/web/%.o, $(GAME_SOURCES))

$(VERBOSE).SILENT:

.PHONY: all
all: clean release

build:
	mkdir $@

build/release: | build
	mkdir $@

build/release/web: | build/release
	mkdir $@

build/release/web/vendor: | build/release/web
	mkdir $@

build/vendor: | build
	mkdir $@

build/vendor/raylib: | build/vendor
	mkdir $@

build/vendor/raylib/web: | build/vendor/raylib
	mkdir $@

bin:
	mkdir $@

bin/release: | bin
	mkdir $@

bin/release/web: | bin/release
	mkdir $@

vendor/raylib/src:
	git submodule update --init --recursive

$(RAYLIB_SOURCES): vendor/raylib/src

$(RAYLIB_OBJECTS): build/vendor/raylib/web/%.o: vendor/raylib/src/%.c | build/vendor/raylib/web
	$(EMCC) -O3 -DPLATFORM_WEB -DGRAPHICS_API_OPENGL_ES2 -o $@ -c $<

$(LIB_RAYLIB): $(RAYLIB_OBJECTS)
	$(EMAR) rcs $@ $(RAYLIB_OBJECTS)

$(RELEASE_OBJECTS): build/release/web/%.o: src/%.c $(MAKEFILE_LIST) $(LIB_RAYLIB) $(GAME_HEADERS) | build/release/web build/release/web/vendor
	$(EMCC) $(INCLUDE_FLAGS) $(FLAGS) $(RELEASE_FLAGS) -o $@ -c $<

bin/release/web/index.html: $(LIB_RAYLIB) $(RELEASE_OBJECTS) src/minshell.html $(CONTENT_SOURCES) | bin/release/web
	$(EMCC) $(FLAGS) $(RELEASE_FLAGS) -o $@ $(RELEASE_OBJECTS) $(LIB_RAYLIB) -s USE_GLFW=3 -s TOTAL_MEMORY=$(TOTAL_MEMORY) --memory-init-file 0 --shell-file src/minshell.html --preload-file src/resources

.PHONY: release
release: bin/release/web/index.html
	@echo Done

.PHONY: clean
clean:
	if [ -d "build/vendor/raylib/web" ]; then rm -rf build/vendor/raylib/web; fi
	if [ -d "build/release/web" ]; then rm -rf build/release/web; fi
	if [ -d "bin/release/web" ]; then rm -rf bin/release/web; fi
	@echo "Done"
